[{"D:\\reacthookForm\\advanceimagevalidation\\src\\reportWebVitals.js":"1","D:\\reacthookForm\\advanceimagevalidation\\src\\App.js":"2","D:\\reacthookForm\\advanceimagevalidation\\src\\Form.js":"3"},{"size":362,"mtime":499162500000,"results":"4","hashOfConfig":"5"},{"size":242,"mtime":1606561262978,"results":"6","hashOfConfig":"5"},{"size":3186,"mtime":1606564731983,"results":"7","hashOfConfig":"5"},{"filePath":"8","messages":"9","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"1yi223o",{"filePath":"10","messages":"11","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"12"},{"filePath":"13","messages":"14","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"15"},"D:\\reacthookForm\\advanceimagevalidation\\src\\reportWebVitals.js",[],"D:\\reacthookForm\\advanceimagevalidation\\src\\App.js",["16"],"import logo from './logo.svg';\nimport './App.css';\nimport Form from './Form';\nimport \"bootstrap/dist/css/bootstrap.min.css\";\nfunction App() {\n  return (\n    <div className=\"container py-3\">\n     <Form/>\n    </div>\n  );\n}\n\nexport default App;\n","D:\\reacthookForm\\advanceimagevalidation\\src\\Form.js",["17"],"import React from 'react'\r\nimport { useForm } from \"react-hook-form\";\r\nimport classNames from \"classnames\";\r\n\r\n\r\nconst getDimension = async (file) => {\r\n    let reader = new FileReader();\r\n    return new Promise((resolve, reject) => {\r\n      reader.onerror = () => {\r\n        reader.abort();\r\n        reject(new DOMException(\"Problem parsing input file.\"));\r\n      };\r\n  \r\n      reader.onload = () => {\r\n        var image = new Image();\r\n        image.src = reader.result;\r\n        image.onload = function () {\r\n          resolve({ width: this.width, height: this.height });\r\n        };\r\n      };\r\n      reader.readAsDataURL(file);\r\n    });\r\n  };\r\nconst Form = () => {\r\n    const { register, handleSubmit, watch, errors } = useForm();\r\n    const onSubmit = data => console.log(data);\r\n    return (\r\n        <div className=\"card shadow border-0\">\r\n            <div className=\"card-header\">\r\n                Upload Images\r\n            </div>\r\n            <div className=\"card-body\">\r\n                <form onSubmit={handleSubmit(onSubmit)}>\r\n                    <div className=\"custom-file mb-3\">\r\n                        <input type=\"file\"\r\n                            className={classNames(\"custom-file-input\", { \"is-invalid\": errors.profile })}\r\n                            id=\"validatedCustomFile\"\r\n                            name=\"profile\"\r\n                            ref={register({\r\n                                required: \"This field is required\",\r\n                                validate: async (value) => {\r\n                                    console.log(value[0])\r\n                                    const fileTypes = [\"jpg\", \"png\", \"jpeg\"];\r\n                                    console.log(value[0].name.split(\".\")[1])\r\n                                    if (!fileTypes.includes(value[0].name.split(\".\")[1])) {\r\n                                        return `Please upload a valid file format (${fileTypes})`\r\n                                    }\r\n\r\n                                    const sizes = await getDimension(value[0]) \r\n                                    if(sizes.width>1000 && sizes.height>1000){\r\n                                        return \"Image Width and height must be less then or equal to 1000px\"\r\n                                    }\r\n                                    console.log(sizes)\r\n\r\n                                    const fileSize = Math.round(value[0].size/1024);\r\n                                    if(fileSize>500){\r\n                                        return \"File Size Must be lower then 500kb\"\r\n                                    }\r\n                                }\r\n\r\n                            })}\r\n                        />\r\n                        <label className=\"custom-file-label\" htmlFor=\"validatedCustomFile\">Choose file...</label>\r\n                        {errors.profile && (\r\n                            <div className=\"invalid-feedback\">{errors.profile.message}</div>\r\n                        )}\r\n\r\n                    </div>\r\n                    <button className=\"btn btn-primary\">Upload File</button>\r\n                </form>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Form\r\n",{"ruleId":"18","severity":1,"message":"19","line":1,"column":8,"nodeType":"20","messageId":"21","endLine":1,"endColumn":12},{"ruleId":"18","severity":1,"message":"22","line":25,"column":37,"nodeType":"20","messageId":"21","endLine":25,"endColumn":42},"no-unused-vars","'logo' is defined but never used.","Identifier","unusedVar","'watch' is assigned a value but never used."]